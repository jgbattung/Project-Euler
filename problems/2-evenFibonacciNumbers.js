//Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
//By starting with 1 and 2, the first 10 terms will be:
// 1,2,3,5,8,13,21,34,55,89
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


fibArray = [1,2]
sumOfEvenValues = 0;

const getFib = () => {
  do {
    nextVal = (fibArray[fibArray.length - 1] + fibArray[fibArray.length - 2])
    fibArray.push(nextVal)
  } 
  while (fibArray[fibArray.length -1 ] < 4000001)
  if(fibArray[fibArray.length -1] > 4000000) {
    fibArray.pop()
  }
}

const getSumOfEvenValues = () => {
  for(i=0; i<fibArray.length; i++) {
    if(fibArray[i] % 2 === 0) {
      sumOfEvenValues+=fibArray[i];
    }
  }
  return sumOfEvenValues
}


getFib()
getSumOfEvenValues()
console.log(sumOfEvenValues)


//Solution
//1. Create an array fib with values of 1,2.
//2. Get the fibbonaci sequence and add to the array. If the last value of the array is more than 4M, remove it from the array
//3. Loop over the fib array, if the value is even, add it to the sumOfEvenValues variable